"use client";

import { useState } from "react";

export const metadata = {
    title: "TipoCuidado",
    description: "Generated by create next app"
}

const TipoCuidadoPage = () => {
    const [nombre, setNombre] = useState('');
    const [descripcion, setDescripcion] = useState('');

    const handleNombreChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        setNombre(event.target.value);
    };

    const handleDescripcionChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        setDescripcion(event.target.value);
    };

    const generateRandomId = (): number => {
        return Math.floor(Math.random() * 1000000); // Genera un número aleatorio entre 0 y 999999
    };

    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
        event.preventDefault();

        const id = generateRandomId();

        try {
            const response = await fetch('http://localhost:8080/api/apipet/v1/tipocuidado/registrar', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id,
                    nombre,
                    descripcion
                })
            });

            if (response.ok) {
                // El registro se realizó correctamente
                console.log('Registro exitoso');
            } else {
                // Hubo un error en la solicitud
                console.error('Error en el registro');
            }
        } catch (error) {
            // Error de red u otro error
            console.error('Error en la solicitud:', error);
        }

        // Reinicia los valores de los campos después de enviar el formulario
        setNombre('');
        setDescripcion('');
    };
    return (
        <div>
            <h1>Registrar tipo cuidado</h1>
            <form onSubmit={handleSubmit}>
                <div>
                    <label htmlFor="nombre">Nombre:</label>
                    <input type="text" id="nombre" value={nombre} onChange={handleNombreChange} style={{ backgroundColor: 'white', color: 'black' }} />
                </div>
                <div>
                    <label htmlFor="descripcion">Descripción:</label>
                    <input type="text" id="descripcion" value={descripcion} onChange={handleDescripcionChange} style={{ backgroundColor: 'white', color: 'black' }} />
                </div>
                <button type="submit" style={{ backgroundColor: 'white', color: 'black' }}>Registrar</button>
            </form>
        </div>
    );
};

export default TipoCuidadoPage;